os:
  - linux
sudo: required
services:
  - docker
language: java
before_install:
  - sudo service docker restart ; sleep 10
  - jdk_switcher use oraclejdk8
install:
  #--------------------------------------------------
  # install the full stack for JHipster
  #--------------------------------------------------
  - npm install -g yo
  - npm install -g bower
  - npm install -g grunt-cli
  - npm install -g gulp
  - npm install -g generator-jhipster@2.21.1
  - git clone https://github.com/jhipster/generator-jhipster.git
  - cd $TRAVIS_BUILD_DIR/generator-jhipster
  - npm link
  #--------------------------------------------------
  # install docker-compose
  #--------------------------------------------------
  - curl -L https://github.com/docker/compose/releases/download/1.4.2/docker-compose-`uname -s`-`uname -m` > docker-compose
  - sudo mv docker-compose /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
  #--------------------------------------------------
  # download docker images
  #--------------------------------------------------
  - docker pull mysql
  - docker pull postgres
  - docker pull mongo
  - docker pull cassandra
  #--------------------------------------------------
  # clone and get dependency offline
  #--------------------------------------------------
  - cd $TRAVIS_BUILD_DIR/
  - git clone https://github.com/jhipster/jhipster-sample-app.git
  - cd $TRAVIS_BUILD_DIR/jhipster-sample-app/ && mvn dependency:go-offline
  #--------------------------------------------------
  # check version
  #--------------------------------------------------
  - java -version
  - git --version
  - yo --version
  - mvn -v
  - node -v
  - npm -v
  - bower -v
  - grunt --version
  - gulp -v
  - grunt --version
  - docker version
  - docker-compose version
env:
  matrix:
  - REP=sample-app
  - REP=sample-app-postgresql
  - REP=sample-app-mongodb
jdk:
  - oraclejdk8
script:
  - cd $TRAVIS_BUILD_DIR/$REP
  - yo jhipster --force --no-insight
  - ls -al
  - if [ $REP == 'sample-app-mongodb' ]; then docker-compose -f docker-compose-prod.yml up -d; fi
  - sleep 10
  - mvn &
  - sleep 120
  - curl --retry 10 --retry-delay 5 -I http://localhost:8080/ | grep "HTTP/1.1 200 OK"
  - fuser -k 8080/tcp ; sleep 10
  #---------------------------------------------
  # jhipster-sample-app
  #---------------------------------------------
  # - cd $TRAVIS_BUILD_DIR/jhipster-sample-app/
  # - mvn spring-boot:run &
  # - sleep 60
  # - curl --retry 10 --retry-delay 5 -I http://localhost:8080/ | grep "HTTP/1.1 200 OK"
  # - fuser -k 8080/tcp ; sleep 10
  #---------------------------------------------
  # jhipster-sample-app-java7
  #---------------------------------------------
  # - jdk_switcher use oraclejdk7
  # - cd $TRAVIS_BUILD_DIR/jhipster-sample-app-java7/
  # - mvn spring-boot:run &
  # - sleep 60
  # - curl --retry 10 --retry-delay 5 -I http://localhost:8080/ | grep "HTTP/1.1 200 OK"
  # - fuser -k 8080/tcp ; sleep 10
  # - jdk_switcher use oraclejdk8
  #---------------------------------------------
  # jhipster-sample-app-mongodb
  #---------------------------------------------
  # - cd $TRAVIS_BUILD_DIR/jhipster-sample-app-mongodb/
  # - docker run -d -p 27017:27017 mongo ; sleep 10
  # - docker-compose up -d
  # - mvn spring-boot:run &
  # - sleep 60
  # - curl --retry 10 --retry-delay 5 -I http://localhost:8080/ | grep "HTTP/1.1 200 OK"
  # - fuser -k 8080/tcp ; sleep 10
  #---------------------------------------------
  # jhipster-sample-app-cassandra
  #---------------------------------------------
  # - cd $TRAVIS_BUILD_DIR/jhipster-sample-app-cassandra/
  # - docker run --privileged -d --name=cassandra -p 9042:9042 jhipster-cassandra ; sleep 20
  # - docker exec -it cassandra cqlsh -f /create-keyspace-tables.cql
  # - mvn spring-boot:run &
  # - sleep 120
  # - curl --retry 10 --retry-delay 5 -I http://localhost:8080/ | grep "HTTP/1.1 200 OK"
  # - fuser -k 8080/tcp ; sleep 10
