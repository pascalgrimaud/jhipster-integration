os:
  - linux
sudo: required
services:
  - docker
language: java
before_install:
  - sudo service docker restart ; sleep 10
  - sudo /etc/init.d/postgresql stop
  - jdk_switcher use oraclejdk8
install:
  #--------------------------------------------------
  # install the full stack for JHipster
  #--------------------------------------------------
  - npm install -g yo
  - npm install -g bower
  - npm install -g grunt-cli
  - npm install -g gulp
  - npm install -g generator-jhipster@2.22.0
  #--------------------------------------------------
  # use a snapshot version of jhispter
  #--------------------------------------------------
  - git clone -b postgresql-use-spring-datasource-url https://github.com/pascalgrimaud/generator-jhipster.git
  - cd $TRAVIS_BUILD_DIR/generator-jhipster
  - npm link
  #--------------------------------------------------
  # install docker-compose
  #--------------------------------------------------
  - curl -L https://github.com/docker/compose/releases/download/1.4.2/docker-compose-`uname -s`-`uname -m` > docker-compose
  - sudo mv docker-compose /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
  #--------------------------------------------------
  # download docker images
  #--------------------------------------------------
  - docker pull mysql
  - docker pull postgres
  - docker pull mongo
  - docker pull cassandra
  - docker pull elasticsearch
  #--------------------------------------------------
  # clone and get dependency offline
  #--------------------------------------------------
  - cd $TRAVIS_BUILD_DIR/
  - git clone https://github.com/jhipster/jhipster-sample-app.git
  - cd $TRAVIS_BUILD_DIR/jhipster-sample-app/ && mvn dependency:go-offline
  #--------------------------------------------------
  # check version
  #--------------------------------------------------
  - java -version
  - git --version
  - yo --version
  - mvn -v
  - node -v
  - npm -v
  - bower -v
  - grunt --version
  - gulp -v
  - grunt --version
  - docker version
  - docker-compose version
env:
  matrix:
  - REP=sample-app
  - REP=sample-app-postgresql
  - REP=sample-app-mongodb
  - REP=sample-app-cassandra
  - REP=sample-app-elasticsearch
jdk:
  - oraclejdk8
script:
  - $TRAVIS_BUILD_DIR/scripts/01-generate-project.sh
  - $TRAVIS_BUILD_DIR/scripts/02-generate-entities.sh
  - ls -al $TRAVIS_BUILD_DIR/$REP
  - $TRAVIS_BUILD_DIR/scripts/03-docker-compose.sh
  - $TRAVIS_BUILD_DIR/scripts/04-run-dev-profile.sh
  - $TRAVIS_BUILD_DIR/scripts/05-run-prod-profile.sh
