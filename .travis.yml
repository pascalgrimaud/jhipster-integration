sudo: required
services:
  - docker
before_install:
  - sudo service docker restart ; sleep 10
  - jdk_switcher use oraclejdk8
install:
  # - npm install -g yo
  # - npm install -g bower
  # - npm install -g grunt-cli
  # - npm install -g gulp
  # - npm install -g generator-jhipster@2.21.0
  - docker pull jdubois/jhipster-docker
  - docker run -d -p 8081:8080 --name=app --user=jhipster -w /jhipster -v `pwd`/sample-app/:/jhipster/ jdubois/jhipster-docker
  - sleep 5
  - docker ps -a
  - docker exec --user=jhipster -it app ls -l /jhipster
  - docker exec --user=jhipster -d app yo jhipster --inforce --no-insight 
  # - docker pull mysql
  # - docker pull postgres
  # - docker pull mongo
  # - docker pull cassandra
  # - java -version
  # - git --version
  # - yo --version
  # - mvn -v
  # - node -v
  # - npm -v
  # - bower -v
  # - grunt --version
  # - gulp -v
  # - grunt --version
  # - docker run -d -u jhipster -w /jhipster -v `pwd`/sample-app-mysql/:/jhipster/ jdubois/jhipster-docker yo jhipster --inforce --no-insight
  # - docker run -d -u jhipster -w /jhipster -v `pwd`/sample-app-postgresql/:/jhipster/ jdubois/jhipster-docker yo jhipster --inforce --no-insight
  # - docker run -d -u jhipster -w /jhipster -v `pwd`/sample-app-mongodb/:/jhipster/ jdubois/jhipster-docker yo jhipster --inforce --no-insight
  # - docker run -d -u jhipster -w /jhipster -v `pwd`/sample-app-cassandra/:/jhipster/ jdubois/jhipster-docker yo jhipster --inforce --no-insight
  - sleep 10
  - docker ps -a
  - docker logs app
  - sleep 60
  - ls -l `pwd`/sample-app/
  # - ls -l `pwd`/sample-app-mysql/
script:
  #------------------
  #--- sample-app ---
  #------------------
  - cd `pwd`/sample-app/
  - mvn spring-boot:run &
  - sleep 120
  - curl --retry 10 --retry-delay 5 -I http://localhost:8080/ | grep "HTTP/1.1 200 OK"
  - fuser -k 8080/tcp
  #------------------------
  #--- sample-app-mysql ---
  #------------------------
  # - docker run -d -p 3306:3306 -e MYSQL_USER=root -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -e MYSQL_DATABASE=xxx mysql
  # - sleep 10
  # - cd `pwd`/sample-app-mysql/
  # - mvn spring-boot:run &
  # - sleep 120
  # - curl --retry 10 --retry-delay 5 -I http://localhost:8080/ | grep "HTTP/1.1 200 OK"
  # - fuser -k 8080/tcp
  # - cd ..
  #-----------------------------
  #--- sample-app-postgresql ---
  #-----------------------------
  # - docker run -d -p 5432:5432 -e POSTGRES_USER=samplePostgreSQL postgres
  # - sleep 10
  # - cd sample-app-postgresql/
  # - mvn spring-boot:run &
  # - sleep 120
  # - curl --retry 10 --retry-delay 5 -I http://localhost:8080/ | grep "HTTP/1.1 200 OK"
  # - fuser -k 8080/tcp
  # - sleep 10
  # - cd ..
  #--------------------------
  #--- sample-app-mongodb ---
  #--------------------------
  # - docker run -d -p 27017:27017 mongo
  # - sleep 10
  # - cd sample-app-mongodb/
  # - mvn spring-boot:run &
  # - sleep 120
  # - curl --retry 10 --retry-delay 5 -I http://localhost:8080/ | grep "HTTP/1.1 200 OK"
  # - fuser -k 8080/tcp
  # - sleep 10
  # - cd ..
